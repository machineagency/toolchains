const h=(t,n)=>{t[n[0]].splice(n[1],1)},d=(t,n)=>{delete t[n[0]]},f=(t,n)=>t[n].length===0;function c(t){return typeof t[0]=="number"?"point":t[0]}const v=(t,n)=>c(t[n[0]][n[1]]),y=t=>{const n=c(t),e={point:t,cubic:t[2]}[n];return e||console.log("unknown command type"),e},m=t=>t.composedPath()[0],g=(t,n)=>m(t).matches(n),P=t=>(n,e,o)=>{t.addEventListener(n,r=>{r.trigger=m(r),(e===""||g(r,e))&&o(r)})},i=t=>t.split(",").slice(0,2).join(","),C=(t,n)=>i(t)===i(n),b=t=>t.split(",").map((n,e,o)=>e!==0?Number(n.trim()):n.trim()),k=t=>t.join(","),T=t=>t[2]===1||t[2]===3,l=(t,n)=>p(t,n)<1e-6,p=([t,n],[e,o])=>Math.sqrt((e-t)**2+(o-n)**2);function j(t){const n=r=>{const s=t[r],u=c(s),a={point:s,cubic:s[2]}[u];return a||console.log("unknown command type"),a},e=n(0),o=n(t.length-1);return l(e,o)}function w(t){for(var n="",e="abcdefghijklmnopqrstuvwxyz",o=e.length,r=0;r<t;r++)n+=e.charAt(Math.floor(Math.random()*o));return n}export{c as cmdType,P as createListener,b as dataIndexFromString,T as dataIndexIsHandle,k as dataIndexToString,C as dataIndicesSamePathCmd,y as getCmdPt,v as getCmdType,i as getPathCmdString,j as isClosed,f as isPathEmpty,p as length,w as makeID,l as overlap,h as removeCommand,d as removePath};
