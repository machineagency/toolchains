import{y as d,b as $}from"./lit-html-b7b68613.js";function S(i,o,e){let r=Math.sqrt(o*o+e*e),n=Math.floor(r/i*1e3),c=Math.floor(o*40),l=Math.floor(e*40);return`XM,${n},${c},${l}\r`}const x={nickname:"QT\r",reboot:"RB\r",queryPenUp:"QP\r",togglePen:"TP\r",home:"HM,1000\r",disableMotors:"EM,0,0\r",enableMotors:"EM,1,1\r",segment:S(5,10,10),eStop:"ES\r"},C={inports:{command:{type:"string",value:null}},outports:{serialOut:{type:"string",value:null}},state:{connected:!1,currentCommand:x.segment},ui:{displayName:"Axi",width:200,height:200}};function P(i,o,e){function s(){}let r,n,c,l,a;async function p(){const t=new TextDecoderStream;for(c=a.readable.pipeTo(t.writable),n=t.readable.getReader();;){const{value:u,done:y}=await n.read();if(y){n.releaseLock();break}console.log(`AXI says ${u}`),o.serialOut.value=u}}async function m(){const t=new TextEncoderStream;l=t.readable.pipeTo(a.writable),r=t.writable.getWriter()}async function f(t){await r.write(t)}async function w(){await a.open({baudRate:9600}),e.connected=!0,p(),m()}async function b(){n.cancel(),await c.catch(()=>{}),r.close(),await l,await a.close(),e.connected=!1}async function M(){e.connected?(console.log("Disconnect"),b()):navigator.serial.requestPort().then(t=>{a=t,w()}).catch(t=>{console.log("oops no port selected")})}function g(){return d`<input type="text" value=${e.currentCommand} />
      <button @click=${()=>f(e.currentCommand)}>send</button>`}function h(){return d`
      <button @click=${M}>
        ${e.connected?"Disconnect":"Connect"}
      </button>
      ${e.connected?g():$}
    `}return{init:s,render:h}}const T={config:C,tool:P};export{T as default};
